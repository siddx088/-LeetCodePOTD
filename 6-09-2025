class Solution {
public:
    // Function to calculate total steps from 1 to n
    long long calc(long long n) {
        if (n == 0) return 0;
        long long res = 0;
        long long power = 1;
        int step = 1;

        while (power <= n) {
            long long next = power * 4 - 1;  // range [power, next]
            long long high = min(n, next);
            res += (high - power + 1) * step;
            power *= 4;
            step++;
        }
        return res;
    }

    long long minOperations(vector<vector<int>>& queries) {
        long long ans = 0;
        for (auto &q : queries) {
            long long l = q[0], r = q[1];
            long long totalSteps = calc(r) - calc(l - 1);
            ans += (totalSteps + 1) / 2; // ceil division
        }
        return ans;
    }
};
